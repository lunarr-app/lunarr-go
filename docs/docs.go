// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/movies": {
            "get": {
                "description": "Get a list of movies based on the search query and pagination parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get Movie Lists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key",
                        "name": "x-api-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of movies per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search by movie title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by movie release year",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"recent\"",
                        "description": "Sort by: recent, latest, popular",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.ListsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/movies/{tmdb_id}/stream": {
            "get": {
                "description": "Stream a movie based on the TMDb ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Stream a movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key",
                        "name": "x-api-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "TMDb ID",
                        "name": "tmdb_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "Retrieve all users.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get All Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserAccounts"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/me": {
            "get": {
                "description": "Retrieve the user data for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get User Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key",
                        "name": "x-api-key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserAccounts"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "loginReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.UserLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Creates a new user account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Signup",
                "parameters": [
                    {
                        "description": "User Signup Request",
                        "name": "userReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.UserSignup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schema.UserSignupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hello": {
            "get": {
                "description": "Hello",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Hello",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ResponseHello"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ResponseHello": {
            "type": "object",
            "properties": {
                "hello": {
                    "type": "string"
                }
            }
        },
        "models.BelongsToCollection": {
            "type": "object",
            "properties": {
                "backdrop_path": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "poster_path": {
                    "type": "string"
                }
            }
        },
        "models.MovieMetadata": {
            "type": "object",
            "properties": {
                "adult": {
                    "type": "boolean"
                },
                "backdrop_path": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TMDbGenre"
                    }
                },
                "homepage": {
                    "type": "string"
                },
                "imdb_id": {
                    "type": "string"
                },
                "original_language": {
                    "type": "string"
                },
                "original_title": {
                    "type": "string"
                },
                "overview": {
                    "type": "string"
                },
                "popularity": {
                    "type": "number"
                },
                "poster_path": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "revenue": {
                    "type": "integer"
                },
                "runtime": {
                    "type": "integer"
                },
                "spoken_languages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TMDbSpokenLanguage"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tagline": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "video": {
                    "type": "boolean"
                },
                "vote_average": {
                    "type": "number"
                },
                "vote_count": {
                    "type": "integer"
                }
            }
        },
        "models.MovieWithFiles": {
            "type": "object",
            "properties": {
                "belongs_to_collection": {
                    "$ref": "#/definitions/models.BelongsToCollection"
                },
                "location": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/models.MovieMetadata"
                },
                "tmdb_id": {
                    "type": "integer"
                }
            }
        },
        "models.SubtitleSettings": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                }
            }
        },
        "models.TMDbGenre": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.TMDbSpokenLanguage": {
            "type": "object",
            "properties": {
                "iso_639_1": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.TranscodingSettings": {
            "type": "object",
            "properties": {
                "bitrate": {
                    "type": "integer"
                },
                "codec": {
                    "type": "string"
                },
                "resolution": {
                    "type": "string"
                }
            }
        },
        "models.UserAccounts": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "current_status": {
                    "type": "string"
                },
                "displayname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "last_seen_at": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "settings": {
                    "$ref": "#/definitions/models.UserSettings"
                },
                "sex": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserRole": {
            "type": "string",
            "enum": [
                "admin",
                "superuser",
                "subscriber"
            ],
            "x-enum-varnames": [
                "UserRoleAdmin",
                "UserRoleSuperuser",
                "UserRoleSubscriber"
            ]
        },
        "models.UserSettings": {
            "type": "object",
            "properties": {
                "subtitle": {
                    "$ref": "#/definitions/models.SubtitleSettings"
                },
                "theme": {
                    "type": "string"
                },
                "transcoding": {
                    "$ref": "#/definitions/models.TranscodingSettings"
                }
            }
        },
        "schema.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "schema.ListsResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page_current": {
                    "type": "integer"
                },
                "page_total": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MovieWithFiles"
                    }
                }
            }
        },
        "schema.UserLogin": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 2
                }
            }
        },
        "schema.UserLoginResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "schema.UserSignup": {
            "type": "object",
            "required": [
                "displayname",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "displayname": {
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 1
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                },
                "sex": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female",
                        "unknown"
                    ]
                },
                "username": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 2
                }
            }
        },
        "schema.UserSignupResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Lunarr API",
	Description:      "Swagger for Lunarr API endpoints",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
